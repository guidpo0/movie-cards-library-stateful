{"version":3,"sources":["images/Appleseed_Alpha.jpg","images/Final_Fantasy_Spirits_Within.jpg","images/Ghost_In_The_Shell_2_0.jpg","images/Kingsglaive_Final_Fantasy_XV.jpg","images/Resident_Evil_Vendetta.jpg","components/Header.jsx","components/Rating.jsx","components/MovieCard.jsx","components/MovieList.jsx","components/Input.jsx","components/Option.jsx","components/Select.jsx","data2.js","components/SearchBar.jsx","components/Textarea.jsx","components/Button.jsx","components/AddMovie.jsx","components/MovieLibrary.jsx","data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","React","Component","Rating","rating","this","props","data-testid","defaultProps","MovieCard","movie","title","subtitle","storyline","imagePath","alt","src","MovieList","movies","map","key","Input","text","test","name","value","change","type","checked","htmlFor","id","undefined","onChange","Option","option","dataTestId","Select","options","index","filterOptions","SearchBar","searchText","onSearchTextChange","bookmarkedOnly","onBookmarkedChange","selectedGenre","onSelectedGenreChange","Textarea","Button","onClick","AddMovie","state","genre","handleChange","bind","handleClick","target","setState","click","sendMovie","newMovieOptions","forEach","push","MovieLibrary","handleAddMovieClick","moviesFiltered","newMovie","bookmarked","filteredMovies","filter","includes","kingsglaive","final","ghost","appleseed","resident","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57480d28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Appleseed_Alpha.498ae78a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Final_Fantasy_Spirits_Within.0d8b80ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Ghost_In_The_Shell_2_0.7d6b4f9c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Kingsglaive_Final_Fantasy_XV.917daac0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Resident_Evil_Vendetta.77c10ef3.jpg\";","import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"movie-card-header\">\n        <h1 className=\"page-title\">Movie Cards Library</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Rating extends React.Component {\n  render() {\n    const { rating } = this.props;\n    return (\n      <div className=\"movie-card-rating\" data-testid=\"rating\">\n        <span className=\"rating\">{rating}</span>\n      </div>\n    );\n  }\n}\n\nRating.propTypes = { rating: PropTypes.number };\n\nRating.defaultProps = {\n  rating: 'undefined',\n};\n\nexport default Rating;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Rating from './Rating';\n\nclass MovieCard extends React.Component {\n  render() {\n    const { movie } = this.props;\n    const { title, subtitle, storyline, rating, imagePath } = movie;\n    return (\n      <div className=\"movie-card\" data-testid=\"movie-card\">\n        <img alt=\"Movie Cover\" className=\"movie-card-image\" src={ imagePath } />\n        <div className=\"movie-card-body\">\n          <h4 data-testid=\"movie-card-title\" className=\"movie-card-title\">{title}</h4>\n          <h5 className=\"movie-card-subtitle\">{subtitle}</h5>\n          <p className=\"movie-card-storyline\">{storyline}</p>\n        </div>\n        <Rating rating={ rating } />\n      </div>\n    );\n  }\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    storyline: PropTypes.string,\n    rating: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    imagePath: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MovieCard from './MovieCard';\n\nclass MovieList extends React.Component {\n  render() {\n    const { movies } = this.props;\n\n    return (\n      <div data-testid=\"movie-list\" className=\"movie-list\">\n        { movies.map((movie) => <MovieCard key={ movie.title } movie={ movie } />) }\n      </div>\n    );\n  }\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.object,\n  ).isRequired,\n};\n\nexport default MovieList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Input extends React.Component {\n  render() {\n    const {\n      text,\n      test,\n      name,\n      value,\n      change,\n      type,\n      checked,\n    } = this.props;\n    return (\n      <label\n        htmlFor={ name }\n        data-testid={ (test === '') ? `${name}-input-label` : `${test}-label` }\n      >\n        { text }\n        <input\n          type={ type }\n          id={ name }\n          name={ name }\n          value={ (value !== undefined) ? value : checked }\n          checked={ checked }\n          onChange={ change }\n          data-testid={ (test === '') ? `${name}-input` : test }\n        />\n      </label>\n    );\n  }\n}\n\nInput.propTypes = {\n  text: PropTypes.string.isRequired,\n  test: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  checked: PropTypes.bool,\n  change: PropTypes.func.isRequired,\n  type: PropTypes.string,\n};\n\nInput.defaultProps = {\n  type: 'text',\n  test: '',\n  value: undefined,\n  checked: false,\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Option extends React.Component {\n  render() {\n    const { option } = this.props;\n    return (\n      <option value={ option.value } data-testid={ option.dataTestId }>\n        { option.text }\n      </option>\n    );\n  }\n}\n\nOption.propTypes = {\n  option: PropTypes.shape({\n    text: PropTypes.string,\n    value: PropTypes.string,\n    dataTestId: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Option;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Option from './Option';\n\nclass Select extends React.Component {\n  render() {\n    const {\n      text,\n      test,\n      name,\n      value,\n      change,\n      options,\n    } = this.props;\n    return (\n      <label\n        htmlFor={ name }\n        data-testid={ (test === '') ? `${name}-input-label` : `${test}-input-label` }\n      >\n        { text }\n        <select\n          id={ name }\n          name={ name }\n          value={ value }\n          onChange={ change }\n          data-testid={ (test === '') ? `${name}-input` : `${test}-input` }\n        >\n          {\n            options.map((option, index) => (\n              <Option\n                key={ index }\n                option={ option }\n              />\n            ))\n          }\n        </select>\n      </label>\n    );\n  }\n}\n\nSelect.propTypes = {\n  text: PropTypes.string.isRequired,\n  test: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  change: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    text: PropTypes.string,\n    value: PropTypes.string,\n    dataTestId: PropTypes.string,\n  })).isRequired,\n};\n\nSelect.defaultProps = {\n  test: '',\n};\n\nexport default Select;\n","const dataTestId = 'select-option';\nconst filterOptions = [\n  {\n    text: 'Todos',\n    value: '',\n    dataTestId,\n  },\n  {\n    text: 'Ação',\n    value: 'action',\n    dataTestId,\n  },\n  {\n    text: 'Comédia',\n    value: 'comedy',\n    dataTestId,\n  },\n  {\n    text: 'Suspense',\n    value: 'thriller',\n    dataTestId,\n  },\n];\n\nexport default filterOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Input from './Input';\nimport Select from './Select';\nimport filterOptions from '../data2';\n\nclass SearchBar extends React.Component {\n  render() {\n    const {\n      searchText,\n      onSearchTextChange,\n      bookmarkedOnly,\n      onBookmarkedChange,\n      selectedGenre,\n      onSelectedGenreChange,\n    } = this.props;\n\n    return (\n      <form className=\"search-bar-form\" data-testid=\"search-bar-form\">\n        <Input\n          text=\"Inclui o texto\"\n          test=\"text-input\"\n          name=\"searchText\"\n          value={ searchText }\n          change={ onSearchTextChange }\n        />\n        <Input\n          text=\"Mostrar somente favoritos\"\n          test=\"checkbox-input\"\n          name=\"bookmarkedOnly\"\n          type=\"checkbox\"\n          checked={ bookmarkedOnly }\n          change={ onBookmarkedChange }\n        />\n        <Select\n          text=\"Filtrar por gênero\"\n          test=\"select\"\n          name=\"selectedGenre\"\n          value={ selectedGenre }\n          change={ onSelectedGenreChange }\n          options={ filterOptions }\n        />\n      </form>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  searchText: PropTypes.string.isRequired,\n  onSearchTextChange: PropTypes.func.isRequired,\n  bookmarkedOnly: PropTypes.bool.isRequired,\n  onBookmarkedChange: PropTypes.func.isRequired,\n  selectedGenre: PropTypes.string.isRequired,\n  onSelectedGenreChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Textarea extends React.Component {\n  render() {\n    const {\n      text,\n      name,\n      value,\n      change,\n    } = this.props;\n    return (\n      <label\n        htmlFor={ name }\n        data-testid={ `${name}-input-label` }\n      >\n        { text }\n        <textarea\n          id={ name }\n          name={ name }\n          value={ value }\n          onChange={ change }\n          data-testid={ `${name}-input` }\n        />\n      </label>\n    );\n  }\n}\n\nTextarea.propTypes = {\n  text: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  change: PropTypes.func.isRequired,\n};\n\nexport default Textarea;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Button extends React.Component {\n  render() {\n    const {\n      text,\n      test,\n      onClick,\n    } = this.props;\n    return (\n      <button\n        type=\"button\"\n        data-testid={ test }\n        onClick={ onClick }\n      >\n        { text }\n      </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  test: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Input from './Input';\nimport Textarea from './Textarea';\nimport Select from './Select';\nimport Button from './Button';\nimport filterOptions from '../data2';\n\nclass AddMovie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange({ target }) {\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({ [target.name]: value });\n  }\n\n  handleClick() {\n    this.setState({\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: '',\n    });\n  }\n\n  render() {\n    const { handleChange: change, handleClick: click } = this;\n    const { onClick: sendMovie } = this.props;\n    const { subtitle, title, imagePath, storyline, rating, genre } = this.state;\n    const newMovieOptions = [];\n    filterOptions.forEach((option) => {\n      const { text, value } = option;\n      if (text !== 'Todos') {\n        newMovieOptions.push({ text, value, dataTestId: 'genre-option' });\n      }\n    });\n    return (\n      <form className=\"add-movie-form\" data-testid=\"add-movie-form\">\n        <Input text=\"Título\" name=\"title\" value={ title } change={ change } />\n        <Input text=\"Subtítulo\" name=\"subtitle\" value={ subtitle } change={ change } />\n        <Input\n          text=\"Imagem\"\n          test=\"image-input\"\n          name=\"imagePath\"\n          value={ imagePath }\n          change={ change }\n        />\n        <Textarea\n          text=\"Sinopse\"\n          name=\"storyline\"\n          value={ storyline }\n          change={ change }\n        />\n        <Input\n          type=\"number\"\n          text=\"Avaliação\"\n          name=\"rating\"\n          value={ rating }\n          change={ change }\n        />\n        <Select\n          text=\"Gênero\"\n          name=\"genre\"\n          value={ genre }\n          change={ change }\n          options={ newMovieOptions }\n        />\n        <Button\n          text=\"Adicionar filme\"\n          test=\"send-button\"\n          onClick={ () => { click(); sendMovie(this.state); } }\n        />\n      </form>\n    );\n  }\n}\n\nAddMovie.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default AddMovie;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends Component {\n  constructor(props) {\n    super(props);\n    const { movies } = this.props;\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleAddMovieClick = this.handleAddMovieClick.bind(this);\n    this.moviesFiltered = this.moviesFiltered.bind(this);\n  }\n\n  handleChange({ target }) {\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [target.name]: value,\n    });\n    this.moviesFiltered();\n  }\n\n  handleAddMovieClick({ subtitle, title, imagePath, storyline, rating, genre }) {\n    const { movies } = this.state;\n    const newMovie = {\n      title,\n      subtitle,\n      storyline,\n      rating,\n      imagePath,\n      bookmarked: false,\n      genre,\n    };\n    this.setState({ movies: [...movies, newMovie] });\n  }\n\n  moviesFiltered() {\n    const { searchText, bookmarkedOnly, selectedGenre, movies } = this.state;\n    let filteredMovies = movies;\n    if (searchText !== '') {\n      filteredMovies = filteredMovies.filter((movie) => (\n        movie.title.includes(searchText)\n        || movie.subtitle.includes(searchText)\n        || movie.storyline.includes(searchText)\n      ));\n    }\n    if (bookmarkedOnly) {\n      filteredMovies = filteredMovies.filter((movie) => movie.bookmarked);\n    }\n    if (selectedGenre !== '') {\n      filteredMovies = filteredMovies.filter((movie) => movie.genre === selectedGenre);\n    }\n    return filteredMovies;\n  }\n\n  render() {\n    const { searchText, bookmarkedOnly, selectedGenre } = this.state;\n    const movies = this.moviesFiltered();\n    return (\n      <div>\n        <h2 className=\"subtitle\">Procurar Filme</h2>\n        <SearchBar\n          searchText={ searchText }\n          onSearchTextChange={ this.handleChange }\n          bookmarkedOnly={ bookmarkedOnly }\n          onBookmarkedChange={ this.handleChange }\n          selectedGenre={ selectedGenre }\n          onSelectedGenreChange={ this.handleChange }\n        />\n        <MovieList movies={ movies } />\n        <h2 className=\"subtitle\">Adicionar Filme</h2>\n        <AddMovie onClick={ this.handleAddMovieClick } />\n      </div>\n    );\n  }\n}\n\nMovieLibrary.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    storyline: PropTypes.string,\n    rating: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    imagePath: PropTypes.string,\n  })).isRequired,\n};\n\nexport default MovieLibrary;\n","import appleseed from './images/Appleseed_Alpha.jpg';\nimport final from './images/Final_Fantasy_Spirits_Within.jpg';\nimport ghost from './images/Ghost_In_The_Shell_2_0.jpg';\nimport kingsglaive from './images/Kingsglaive_Final_Fantasy_XV.jpg';\nimport resident from './images/Resident_Evil_Vendetta.jpg';\n\nconst movies = [\n  {\n    title: 'Kingsglaive',\n    subtitle: 'Final Fantasy XV',\n    storyline: \"King Regis, who oversees the land of Lucis, commands his army of soldiers to protect the kingdom from the Niflheim empire's plans to steal the sacred crystal.\",\n    rating: 4.5,\n    imagePath: kingsglaive,\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Final Fantasy',\n    subtitle: 'Spirits Within',\n    storyline: 'A scientist makes a last stand on Earth with the help of a ragtag team of soldiers against an invasion of alien phantoms.',\n    rating: 4.5,\n    imagePath: final,\n    bookmarked: false,\n    genre: 'fantasy',\n  },\n  {\n    title: 'Ghost In The Shell',\n    subtitle: 'Ghost In The Shell',\n    storyline: 'A hacker known as the Puppet Master is hunted by a female cyborg cop and her partner. This film is a revised version of Ghost in the Shell (1995).',\n    rating: 5,\n    imagePath: ghost,\n    bookmarked: false,\n    genre: 'comedy',\n  },\n  {\n    title: 'Appleseed Alpha',\n    subtitle: 'Appleseed Alpha',\n    storyline: \"A young female soldier Deunan and her cyborg partner Briareos survive through the post World War 3 apocalyptic New York in search of human's future hope, the legendary city of Olympus.\",\n    rating: 3.8,\n    imagePath: appleseed,\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Resident Evil',\n    subtitle: 'Vendetta',\n    storyline: 'Chris Redfield enlists the help of Leon S. Kennedy and Rebecca Chambers to stop a death merchant, with a vengeance, from spreading a deadly virus in New York.',\n    rating: 4.2,\n    imagePath: resident,\n    bookmarked: true,\n    genre: 'fantasy',\n  },\n];\n\nexport default movies;\n","import React from 'react';\nimport Header from './components/Header';\nimport './App.css';\nimport MovieLibrary from './components/MovieLibrary';\nimport movies from './data';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <MovieLibrary movies={ movies } />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}